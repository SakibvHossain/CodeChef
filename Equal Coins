///// I suffer a while for  Tricky simple question

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import static java.lang.System.out;
import java.util.StringTokenizer;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
	 FastReader scan = new FastReader();
       
       int T = scan.nextInt();
        if(T>=1||T<=1000){
         while(T-->0){
             int x = scan.nextInt();
             int y = scan.nextInt();
             if((x>=0||x<=100000000)&&(y>=0||y<=100000000)){
                 if((x+y)>0){
                      if(x%2==0){
	                  if(x==0&&y%2==0)
	                  out.println("YES");
	                  else if(x==0&&y%2!=0)
	                  out.println("NO");
	                  else
	                  out.println("YES");
	               }
	              else
	              out.println("NO");
                 }
             }
         }
        }
       
	}
	
	 private static class FastReader  {
        BufferedReader br;
        StringTokenizer st;
 
        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }
        String next() 
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        int nextInt() { return Integer.parseInt(next()); }
 
        long nextLong() { return Long.parseLong(next()); }
 
        double nextDouble(){ return Double.parseDouble(next()); }
 
        String nextLine()                                
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}



////////////////////////What I did first time ///////////////////// waste of time but learned something new however feel really bad :(

package codechef;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import static java.lang.System.out;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.StringTokenizer;

public class CodeChef {
   
    public static void main(String[] args) {
        
        FastReader scan = new FastReader();
        
        int T = scan.nextInt();
        if(T>=1||T<=1000){
         while(T-->0){
             int x = scan.nextInt();
             int y = scan.nextInt();
             if((x>=0||x<=100000000)&&(y>=0||y<=100000000)){
                 if((x+y)>0){
                     if(((x>1)&&(x%2==0))&&(y==0)){
                         out.println("YES");
                     }else if((x==0)&&(y>1)){
                         out.println("YES");
                     }else if(((x>1)&&(x%2==0))&&y>1){
                         int Ok = (x+(2*y));
                         if(Ok%2==0){
                         out.println("YES");
                         }else{
                             out.println("NO");
                         }
                     }else if((x<=1)&&(x%2==1)&&(y<=1)){
                         out.println("NO");
                     }else{
                         out.println("NO");
                     }
                     
                 }
             }
         }
        }
    }
    
     private static class FastReader  {
        BufferedReader br;
        StringTokenizer st;
 
        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }
        String next() 
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        int nextShort() { return Short.parseShort(next()); }
        
        int nextInt() { return Integer.parseInt(next()); }
 
        long nextLong() { return Long.parseLong(next()); }
 
        double nextDouble(){ return Double.parseDouble(next()); }
 
        String nextLine()                                
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
